######################################
# General Instructions
######################################
# To generate microlite.a file for your particular project you have 
# to run the following command from main directory:
#
# make -C tensorflow/ -f ../archive_makefile PROJECT=<name_of_your_project>
#
# This will create microlite.a file for your target system, which will be
# included in the linking process. 
# Variable PROJECT has to match to the name of your project folder inside 
# projects directory. 


######################################
# Instructions for testing
######################################
# To avoid unnecessary flashing, we can test hardware independent 
# parts of code on development machine. 
# To compile test files add them to TESTFILES variable in specific projects project.mk file
# We also need to create separate archive file for testing, we will call it testlite.a
# To create it run following command from main directory:
#
# make -C tensorflow/ -f ../archive_makefile test PROJECT=<name_of_your_project>
#
# This will create testlite.a file for your development system, which will be
# included in the linking process. 
# Variable PROJECT has to match to the name of your project folder inside 
# projects directory. 
######################################
# Build directory
######################################
PROJECT_PATH = projects/$(PROJECT)

# Microcontroller specific
MICROLITE_BUILD_PATH = $(PROJECT_PATH)/microlite_build
MICROLITE_LIB = $(MICROLITE_BUILD_PATH)/microlite.a

# Test, development machine specific
TESTLITE_BUILD_PATH  = $(PROJECT_PATH)/testlite_build
TESTLITE_LIB = $(TESTLITE_BUILD_PATH)/testlite.a

######################################
# Project selection 
######################################
DIRECTORIES = $(sort $(dir $(wildcard projects/*/)))
PROJECT ?= 0

#Path to libopen, needed by genlink-config.mk
OPENCM3_DIR = libopencm3

ifneq (,$(findstring $(PROJECT),$(DIRECTORIES)))
#Project was found in projects directory, lets include its project.mk file
include projects/$(PROJECT)/project.mk

#Include configuration for linker file, we also get our arch_flags from here
include libopencm3/mk/genlink-config.mk

#Everything is done, lets go to the main rule or to test rule
all: $(MICROLITE_LIB)
# Clean up PREFIX variable
test : PREFIX =
test : $(TESTLITE_LIB)
else
#Project was not found, exit gracefully 
all: 
	@echo Project was not found, exiting!
test: 
	@echo Project was not found, exiting!
endif

######################################
# Make Verbosity
######################################
# Be silent per default, but 'make V=1' will show all compiler calls.
# If you want, V=99 will print out all sorts of things.
V?=0
ifeq ($(V),0)
Q	:= @
NULL	:= 2>/dev/null
endif

#For checking macros, to use it write make print-VARIABLE
print-%  : ; @echo $* = $($*)


###################################### 
# Tool paths
######################################
PREFIX	?= arm-none-eabi-
CC		= $(PREFIX)gcc
CXX 	= $(PREFIX)g++
LD		= $(PREFIX)g++
AS 		= $(PREFIX)gcc -x assembler-with-cpp
AR 		= $(PREFIX)ar
OBJCOPY	= $(PREFIX)objcopy
OBJDUMP	= $(PREFIX)objdump


######################################
# All sources, .c, .cc, .s files
######################################
MICROLITE_LIB_SRCS := \
tensorflow/tensorflow/lite/micro/all_ops_resolver.cc \
tensorflow/tensorflow/lite/micro/memory_helpers.cc \
tensorflow/tensorflow/lite/micro/micro_allocator.cc \
tensorflow/tensorflow/lite/micro/micro_error_reporter.cc \
tensorflow/tensorflow/lite/micro/micro_interpreter.cc \
tensorflow/tensorflow/lite/micro/debug_log.cc \
tensorflow/tensorflow/lite/micro/micro_optional_debug_tools.cc \
tensorflow/tensorflow/lite/micro/micro_profiler.cc \
tensorflow/tensorflow/lite/micro/micro_string.cc \
tensorflow/tensorflow/lite/micro/micro_utils.cc \
tensorflow/tensorflow/lite/micro/recording_micro_allocator.cc \
tensorflow/tensorflow/lite/micro/recording_simple_memory_allocator.cc \
tensorflow/tensorflow/lite/micro/simple_memory_allocator.cc \
tensorflow/tensorflow/lite/micro/test_helpers.cc \
tensorflow/tensorflow/lite/micro/benchmarks/keyword_scrambled_model_data.cc \
tensorflow/tensorflow/lite/micro/kernels/activations.cc \
tensorflow/tensorflow/lite/micro/kernels/arg_min_max.cc \
tensorflow/tensorflow/lite/micro/kernels/ceil.cc \
tensorflow/tensorflow/lite/micro/kernels/circular_buffer.cc \
tensorflow/tensorflow/lite/micro/kernels/comparisons.cc \
tensorflow/tensorflow/lite/micro/kernels/concatenation.cc \
tensorflow/tensorflow/lite/micro/kernels/dequantize.cc \
tensorflow/tensorflow/lite/micro/kernels/elementwise.cc \
tensorflow/tensorflow/lite/micro/kernels/ethosu.cc \
tensorflow/tensorflow/lite/micro/kernels/floor.cc \
tensorflow/tensorflow/lite/micro/kernels/l2norm.cc \
tensorflow/tensorflow/lite/micro/kernels/logical.cc \
tensorflow/tensorflow/lite/micro/kernels/logistic.cc \
tensorflow/tensorflow/lite/micro/kernels/maximum_minimum.cc \
tensorflow/tensorflow/lite/micro/kernels/neg.cc \
tensorflow/tensorflow/lite/micro/kernels/pack.cc \
tensorflow/tensorflow/lite/micro/kernels/pad.cc \
tensorflow/tensorflow/lite/micro/kernels/prelu.cc \
tensorflow/tensorflow/lite/micro/kernels/quantize.cc \
tensorflow/tensorflow/lite/micro/kernels/reduce.cc \
tensorflow/tensorflow/lite/micro/kernels/reshape.cc \
tensorflow/tensorflow/lite/micro/kernels/resize_nearest_neighbor.cc \
tensorflow/tensorflow/lite/micro/kernels/round.cc \
tensorflow/tensorflow/lite/micro/kernels/split.cc \
tensorflow/tensorflow/lite/micro/kernels/strided_slice.cc \
tensorflow/tensorflow/lite/micro/kernels/sub.cc \
tensorflow/tensorflow/lite/micro/kernels/svdf.cc \
tensorflow/tensorflow/lite/micro/kernels/tanh.cc \
tensorflow/tensorflow/lite/micro/kernels/unpack.cc \
tensorflow/tensorflow/lite/micro/memory_planner/greedy_memory_planner.cc \
tensorflow/tensorflow/lite/micro/memory_planner/linear_memory_planner.cc \
tensorflow/tensorflow/lite/micro/testing/test_conv_model.cc \
tensorflow/tensorflow/lite/c/common.c \
tensorflow/tensorflow/lite/core/api/error_reporter.cc \
tensorflow/tensorflow/lite/core/api/flatbuffer_conversions.cc \
tensorflow/tensorflow/lite/core/api/op_resolver.cc \
tensorflow/tensorflow/lite/core/api/tensor_utils.cc \
tensorflow/tensorflow/lite/kernels/internal/quantization_util.cc \
tensorflow/tensorflow/lite/kernels/kernel_util.cc \
tensorflow/tensorflow/lite/micro/testing/test_utils.cc \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/TransformFunctions/arm_rfft_init_q15.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/TransformFunctions/arm_rfft_q15.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/TransformFunctions/arm_cfft_radix4_q15.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/CommonTables/arm_const_structs.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/CommonTables/arm_common_tables.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/StatisticsFunctions/arm_mean_q15.c \
tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Source/StatisticsFunctions/arm_max_q7.c \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/add.cc \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/conv.cc \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/depthwise_conv.cc \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/fully_connected.cc \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/mul.cc \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/pooling.cc \
tensorflow/tensorflow/lite/micro/kernels/cmsis-nn/softmax.cc \

#tensorflow/tensorflow/lite/micro/kernels/conv.cc \
#tensorflow/tensorflow/lite/micro/kernels/add.cc \
#tensorflow/tensorflow/lite/micro/kernels/portable_optimized/depthwise_conv.cc \
#tensorflow/tensorflow/lite/micro/kernels/fully_connected.cc \
#tensorflow/tensorflow/lite/micro/kernels/mul.cc \
#tensorflow/tensorflow/lite/micro/kernels/pooling.cc \
#tensorflow/tensorflow/lite/micro/kernels/softmax.cc \




CMSIS_NN_PATH := tensorflow/tensorflow/lite/micro/tools/make/downloads/cmsis//CMSIS/NN/Source
MICROLITE_LIB_SRCS += \
${CMSIS_NN_PATH}/BasicMathFunctions/arm_elementwise_mul_s8.c \
${CMSIS_NN_PATH}/BasicMathFunctions/arm_elementwise_add_s8.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_q7_opt.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_s8.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_q15_opt.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_q15.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_q7.c \
${CMSIS_NN_PATH}/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15_opt.c \
${CMSIS_NN_PATH}/ConcatenationFunctions/arm_concatenation_s8_z.c \
${CMSIS_NN_PATH}/ConcatenationFunctions/arm_concatenation_s8_x.c \
${CMSIS_NN_PATH}/ConcatenationFunctions/arm_concatenation_s8_w.c \
${CMSIS_NN_PATH}/ConcatenationFunctions/arm_concatenation_s8_y.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_nn_depthwise_conv_s8_core.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_depthwise_conv_u8_basic_ver1.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_s8.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_1x1_s8_fast.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q7_fast.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_nn_mat_mult_kernel_q7_q15_reordered.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_nn_mat_mult_kernel_q7_q15.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q7_RGB.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_nn_mat_mult_s8.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_1x1_HWC_q7_fast_nonsquare.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_depthwise_separable_conv_HWC_q7_nonsquare.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q15_fast_nonsquare.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_depthwise_conv_s8_opt.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_depthwise_conv_3x3_s8.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_nn_mat_mult_kernel_s8_s16.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q15_basic.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q15_fast.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q7_fast_nonsquare.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_nn_mat_mult_kernel_s8_s16_reordered.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_depthwise_separable_conv_HWC_q7.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_depthwise_conv_s8.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_1_x_n_s8.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_HWC_q7_basic_nonsquare.c \
${CMSIS_NN_PATH}/ConvolutionFunctions/arm_convolve_wrapper_s8.c \
${CMSIS_NN_PATH}/PoolingFunctions/arm_pool_q7_HWC.c \
${CMSIS_NN_PATH}/PoolingFunctions/arm_max_pool_s8_opt.c \
${CMSIS_NN_PATH}/PoolingFunctions/arm_avgpool_s8.c \
${CMSIS_NN_PATH}/PoolingFunctions/arm_max_pool_s8.c \
${CMSIS_NN_PATH}/ActivationFunctions/arm_relu_q15.c \
${CMSIS_NN_PATH}/ActivationFunctions/arm_relu_q7.c \
${CMSIS_NN_PATH}/ActivationFunctions/arm_nn_activations_q7.c \
${CMSIS_NN_PATH}/ActivationFunctions/arm_relu6_s8.c \
${CMSIS_NN_PATH}/ActivationFunctions/arm_nn_activations_q15.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_add_q7.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_depthwise_conv_nt_t_padded_s8.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_q7_to_q15_reordered_no_shift.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_depthwise_conv_nt_t_s8.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nntables.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_accumulate_q7_to_q15.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_mult_q7.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_mult_q15.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_q7_to_q15_reordered_with_offset.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_q7_to_q15_with_offset.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_mat_mul_core_4x_s8.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_mat_mult_nt_t_s8.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_vec_mat_mult_t_s8.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_nn_mat_mul_core_1x_s8.c \
${CMSIS_NN_PATH}/NNSupportFunctions/arm_q7_to_q15_no_shift.c \
${CMSIS_NN_PATH}/SoftmaxFunctions/arm_softmax_s8.c \
${CMSIS_NN_PATH}/SoftmaxFunctions/arm_softmax_q15.c \
${CMSIS_NN_PATH}/SoftmaxFunctions/arm_softmax_u8.c \
${CMSIS_NN_PATH}/SoftmaxFunctions/arm_softmax_q7.c \
${CMSIS_NN_PATH}/SoftmaxFunctions/arm_softmax_with_batch_q7.c \
${CMSIS_NN_PATH}/ReshapeFunctions/arm_reshape_s8.c \

######################################
# INCLUDES
######################################
THIRD_PARTY_DIR = tensorflow/tensorflow/lite/micro/tools/make/downloads
INCLUDES := \
-Itensorflow \
-I$(THIRD_PARTY_DIR) \
-I$(THIRD_PARTY_DIR)/gemmlowp \
-I$(THIRD_PARTY_DIR)/flatbuffers/include \
-I$(THIRD_PARTY_DIR)/kissfft \
-I$(THIRD_PARTY_DIR)/ruy \
-I$(THIRD_PARTY_DIR)/cmsis/CMSIS/Core/Include/ \
-I$(THIRD_PARTY_DIR)/cmsis/CMSIS/DSP/Include/  \


######################################
# Objects
######################################
#default
MICROLITE_LIB_OBJS := \
$(addprefix $(MICROLITE_BUILD_PATH)/, $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(MICROLITE_LIB_SRCS))))

vpath %.c $(sort $(dir $(MICROLITE_LIB_SRCS)))
vpath %.cc $(sort $(dir $(MICROLITE_LIB_SRCS)))

#test
TESTLITE_LIB_OBJS := \
$(addprefix $(TESTLITE_BUILD_PATH)/, $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(MICROLITE_LIB_SRCS))))
vpath %.c $(sort $(dir $(MICROLITE_LIB_SRCS)))
vpath %.cc $(sort $(dir $(MICROLITE_LIB_SRCS)))

######################################
# Defines
######################################
C_DEFS := 

CXX_DEFS :=  \
-DNDEBUG \
-DTF_LITE_STATIC_MEMORY \
-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK 
#-DTF_LITE_MCU_DEBUG_LOG

######################################
# Compiler Flags
######################################
FLAGS :=\
-Wall \
-Wvla \
-Wextra \
-Wshadow  \
-Wno-missing-field-initializers \
-Wno-write-strings \
-Wno-sign-compare \
-Wno-type-limits \
-Wdouble-promotion \
-Wunused-variable  \
-Wno-unused-parameter \
-Wunused-function  \
-ffunction-sections \
-fdata-sections \
-fno-delete-null-pointer-checks \
-fno-builtin \
-funsigned-char \
-fshort-wchar \
-MMD \
-fmessage-length=0 \
-fno-exceptions \
-fno-unwind-tables \
-fomit-frame-pointer \
-nostdlib \
-ggdb \
-O3


# Default flags
MICROLITE_CFLAGS 	:= $(ARCH_FLAGS) $(FLAGS) $(C_DEFS)   -std=c12
MICROLITE_CXXFLAGS 	:= $(ARCH_FLAGS) $(FLAGS) $(CXX_DEFS) -std=c++11 -fno-rtti -std=gnu++11 -fpermissive -fno-threadsafe-statics -fno-use-cxa-atexit 

# Test flags
TESTLITE_CXXFLAGS 	= -std=c++11 -DTF_LITE_STATIC_MEMORY -O3 -DTF_LITE_DISABLE_X86_NEON 
TESTLITE_CFLAGS 	= -DTF_LITE_STATIC_MEMORY -O3 -DTF_LITE_DISABLE_X86_NEON 

######################################
# Rules 
######################################

#default all rules
$(MICROLITE_LIB): $(MICROLITE_LIB_OBJS) $(MICROLITE_BUILD_PATH)
	@printf "  AR\t$<\n"
	@mkdir -p $(dir $@)
	$(Q)$(AR) -r $@ $(MICROLITE_LIB_OBJS) 

$(MICROLITE_BUILD_PATH)/%.o: %.c
	@printf "  CC\t$<\n"
	@mkdir -p $(dir $@)
	$(Q)$(CC) $(MICROLITE_CFLAGS) $(INCLUDES) -c $< -o $@

$(MICROLITE_BUILD_PATH)/%.o: %.cc
	@printf "  CXX\t$<\n"
	@mkdir -p $(dir $@)
	$(Q)$(CXX) $(MICROLITE_CXXFLAGS) $(INCLUDES) -c $< -o $@

#test rules
$(TESTLITE_LIB): $(TESTLITE_LIB_OBJS)
	@printf "  AR\t$<\n"
	@mkdir -p $(dir $@)
	$(Q)$(AR) -r $@ $(TESTLITE_LIB_OBJS) 

$(TESTLITE_BUILD_PATH)/%.o: %.c
	@printf "  CC\t$<\n"
	@mkdir -p $(dir $@)
	$(Q)$(CC) $(TESTLITE_CFLAGS) $(INCLUDES) -c $< -o $@

$(TESTLITE_BUILD_PATH)/%.o: %.cc
	@printf "  CXX\t$<\n"
	@mkdir -p $(dir $@)
	$(Q)$(CXX) $(TESTLITE_CXXFLAGS) $(INCLUDES) -c $< -o $@

$(MICROLITE_BUILD_PATH):
	mkdir $@		

clean:
	rm -rf $(MICROLITE_BUILD_PATH) 
